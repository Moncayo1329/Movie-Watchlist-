{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monca\\\\BackendProjects\\\\watchlist\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Movies from \"./Movie\"; // Componente para mostrar la película\nimport Form from \"./movieForm\"; // Componente para el formulario\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]); // Lista de películas\n  const [error, setError] = useState(null); // Manejo de errores\n\n  // UseEffect para cargar las películas desde el backend (API)\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/v1/movies\") // Reemplaza con la URL de tu backend\n    .then(response => {\n      // Asegúrate de que la respuesta contiene las películas\n      setMovies(response.data.movies); // Aquí se espera que la respuesta tenga un campo \"movies\"\n    }).catch(err => {\n      setError(\"Hubo un error al cargar las películas\");\n      console.error(err);\n    });\n  }, []); // Este useEffect se ejecuta solo al montar el componente\n\n  // Función para obtener detalles de una película desde la API de TMDb\n  const fetchMovieDetails = async movieTitle => {\n    const apiKey = '533472bbde22403e17df87ee3d377b10';\n    const url = `https://api.themoviedb.org/3/search/movie?query=${movieTitle}&api_key=${apiKey}&language=en-US`;\n    try {\n      const response = await axios.get(url);\n      const movieData = response.data.results[0]; // Tomar el primer resultado\n\n      if (movieData) {\n        return {\n          title: movieData.title,\n          description: movieData.overview,\n          image: `https://image.tmdb.org/t/p/w500${movieData.poster_path}` // URL de la imagen\n        };\n      } else {\n        setError(\"Pelicula no encontrada\");\n        return null;\n      }\n    } catch (err) {\n      setError(\"Hubo un error\");\n      console.error(err);\n    }\n  };\n\n  // Función para agregar una nueva película\n  const addmovie = async movieTitle => {\n    const movieDetails = await fetchMovieDetails(movieTitle);\n    if (movieDetails) {\n      setMovies(prevMovies => [...prevMovies, movieDetails]); // Añadir la nueva película al estado\n      setError(null); // Limpiar cualquier mensaje de error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addmovie: addmovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), \" \", movies.map((movie, index) => /*#__PURE__*/_jsxDEV(Movies, {\n      task: movie\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) // Mostrar todas las películas\n    )]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/oiihY625Ce2rW4TtQJCK1P9yC8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Movies","Form","jsxDEV","_jsxDEV","App","_s","movies","setMovies","error","setError","get","then","response","data","catch","err","console","fetchMovieDetails","movieTitle","apiKey","url","movieData","results","title","description","overview","image","poster_path","addmovie","movieDetails","prevMovies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","task","_c","$RefreshReg$"],"sources":["C:/Users/monca/BackendProjects/watchlist/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Movies from \"./Movie\"; // Componente para mostrar la película\nimport Form from \"./movieForm\"; // Componente para el formulario\n\nfunction App() {\n  const [movies, setMovies] = useState([]); // Lista de películas\n  const [error, setError] = useState(null); // Manejo de errores\n\n  // UseEffect para cargar las películas desde el backend (API)\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/v1/movies\") // Reemplaza con la URL de tu backend\n      .then((response) => {\n        // Asegúrate de que la respuesta contiene las películas\n        setMovies(response.data.movies); // Aquí se espera que la respuesta tenga un campo \"movies\"\n      })\n      .catch((err) => {\n        setError(\"Hubo un error al cargar las películas\");\n        console.error(err);\n      });\n  }, []); // Este useEffect se ejecuta solo al montar el componente\n\n  // Función para obtener detalles de una película desde la API de TMDb\n  const fetchMovieDetails = async (movieTitle) => {\n    const apiKey = '533472bbde22403e17df87ee3d377b10';\n    const url = `https://api.themoviedb.org/3/search/movie?query=${movieTitle}&api_key=${apiKey}&language=en-US`;\n\n    try {\n      const response = await axios.get(url);\n      const movieData = response.data.results[0]; // Tomar el primer resultado\n\n      if (movieData) {\n        return {\n          title: movieData.title,\n          description: movieData.overview,\n          image: `https://image.tmdb.org/t/p/w500${movieData.poster_path}`, // URL de la imagen\n        };\n      } else {\n        setError(\"Pelicula no encontrada\");\n        return null;\n      }\n    } catch (err) {\n      setError(\"Hubo un error\");\n      console.error(err);\n    }\n  };\n\n  // Función para agregar una nueva película\n  const addmovie = async (movieTitle) => {\n    const movieDetails = await fetchMovieDetails(movieTitle);\n\n    if (movieDetails) {\n      setMovies((prevMovies) => [...prevMovies, movieDetails]); // Añadir la nueva película al estado\n      setError(null); // Limpiar cualquier mensaje de error\n    }\n  };\n\n  return (\n    <div className=\"task-form\">\n      <Form addmovie={addmovie} />\n      {error && <p className=\"error-message\">{error}</p>} {/* Mostrar errores si existen */}\n      {movies.map((movie, index) => (\n        <Movies task={movie} key={index} /> // Mostrar todas las películas\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,SAAS,CAAC,CAAC;AAC9B,OAAOC,IAAI,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACdE,KAAK,CACFW,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAAA,CAC3CC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAL,SAAS,CAACK,QAAQ,CAACC,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAK;MACdN,QAAQ,CAAC,uCAAuC,CAAC;MACjDO,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAME,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC9C,MAAMC,MAAM,GAAG,kCAAkC;IACjD,MAAMC,GAAG,GAAG,mDAAmDF,UAAU,YAAYC,MAAM,iBAAiB;IAE5G,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMb,KAAK,CAACW,GAAG,CAACU,GAAG,CAAC;MACrC,MAAMC,SAAS,GAAGT,QAAQ,CAACC,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE5C,IAAID,SAAS,EAAE;QACb,OAAO;UACLE,KAAK,EAAEF,SAAS,CAACE,KAAK;UACtBC,WAAW,EAAEH,SAAS,CAACI,QAAQ;UAC/BC,KAAK,EAAE,kCAAkCL,SAAS,CAACM,WAAW,EAAE,CAAE;QACpE,CAAC;MACH,CAAC,MAAM;QACLlB,QAAQ,CAAC,wBAAwB,CAAC;QAClC,OAAO,IAAI;MACb;IACF,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZN,QAAQ,CAAC,eAAe,CAAC;MACzBO,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMa,QAAQ,GAAG,MAAOV,UAAU,IAAK;IACrC,MAAMW,YAAY,GAAG,MAAMZ,iBAAiB,CAACC,UAAU,CAAC;IAExD,IAAIW,YAAY,EAAE;MAChBtB,SAAS,CAAEuB,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,YAAY,CAAC,CAAC,CAAC,CAAC;MAC1DpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEN,OAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB7B,OAAA,CAACF,IAAI;MAAC2B,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3B5B,KAAK,iBAAIL,OAAA;MAAG4B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,EACnD9B,MAAM,CAAC+B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBpC,OAAA,CAACH,MAAM;MAACwC,IAAI,EAAEF;IAAM,GAAMC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CA9DQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}