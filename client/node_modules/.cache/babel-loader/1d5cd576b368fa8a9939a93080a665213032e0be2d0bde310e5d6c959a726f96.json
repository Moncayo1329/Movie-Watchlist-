{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import Movies from\"./Movie\";// Componente para mostrar la película\nimport Form from\"./movieForm\";// Componente para el formulario\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[movies,setMovies]=useState([]);// Lista de películas\nconst[error,setError]=useState(null);// Manejo de errores\n// Al cargar la aplicación, leer las películas desde localStorage.\nuseEffect(()=>{const storedMovies=localStorage.getItem(\"movies\");// Obtener las películas del localStorage\nif(storedMovies){setMovies(JSON.parse(storedMovies));// Parsear y asignar las películas al estado\n}},[]);// Este useEffect solo se ejecuta al montar el componente\n// Guardar las películas en localStorage cada vez que cambien\nuseEffect(()=>{if(movies.length>0){localStorage.setItem(\"movies\",JSON.stringify(movies));// Guardar las películas en localStorage\n}},[movies]);// Este useEffect se ejecuta cada vez que el estado `movies` cambie\n// Función para obtener detalles de una película desde la API de TMDb\nconst fetchMovieDetails=async movieTitle=>{try{const response=await axios.get(`http://localhost:5000/api/movies/${movieTitle}`);// Llama a tu backend\nconst movieData=response.data;// Se asume que la respuesta es un objeto con datos de la película\nif(movieData){return{title:movieData.title,description:movieData.description,image:movieData.image// La URL de la imagen que ya está formateada desde el backend\n};}else{setError(\"Película no encontrada\");return null;}}catch(err){setError(\"Hubo un error al obtener los detalles de la película\");console.error(err);return null;}};// Función para agregar una nueva película\nconst addmovie=async movieTitle=>{const movieDetails=await fetchMovieDetails(movieTitle);if(movieDetails){setMovies(prevMovies=>[...prevMovies,movieDetails]);// Añadir la nueva película al estado\nsetError(null);// Limpiar cualquier mensaje de error\n// Ahora guardamos la película en la base de datos del backend\ntry{const response=await axios.post(\"http://localhost:5000/api/v1/movies\",{name:movieDetails.title,completed:false// Establecer como no completada inicialmente\n});setMovies(prevMovies=>[...prevMovies,response.data.movie]);// Añadir la nueva película al estado\n}catch(error){setError(\"Hubo un error al agregar la película\");console.error(error);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-form\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Movie Watch List by Mike\"}),/*#__PURE__*/_jsx(Form,{addmovie:addmovie}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),\" \",movies.map((movie,index)=>/*#__PURE__*/_jsx(Movies,{task:movie},index)// Mostrar todas las películas\n)]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","Movies","Form","jsx","_jsx","jsxs","_jsxs","App","movies","setMovies","error","setError","storedMovies","localStorage","getItem","JSON","parse","length","setItem","stringify","fetchMovieDetails","movieTitle","response","get","movieData","data","title","description","image","err","console","addmovie","movieDetails","prevMovies","post","name","completed","movie","className","children","map","index","task"],"sources":["C:/Users/monca/BackendProjects/watchlist/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Movies from \"./Movie\"; // Componente para mostrar la película\nimport Form from \"./movieForm\"; // Componente para el formulario\n\nfunction App() {\n  const [movies, setMovies] = useState([]); // Lista de películas\n  const [error, setError] = useState(null); // Manejo de errores\n\n  // Al cargar la aplicación, leer las películas desde localStorage.\n  useEffect(() => {\n    const storedMovies = localStorage.getItem(\"movies\"); // Obtener las películas del localStorage\n    if (storedMovies) {\n      setMovies(JSON.parse(storedMovies)); // Parsear y asignar las películas al estado\n    }\n  }, []); // Este useEffect solo se ejecuta al montar el componente\n\n  // Guardar las películas en localStorage cada vez que cambien\n  useEffect(() => {\n    if (movies.length > 0) {\n      localStorage.setItem(\"movies\", JSON.stringify(movies)); // Guardar las películas en localStorage\n    }\n  }, [movies]); // Este useEffect se ejecuta cada vez que el estado `movies` cambie\n\n  // Función para obtener detalles de una película desde la API de TMDb\n  const fetchMovieDetails = async (movieTitle) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/movies/${movieTitle}`); // Llama a tu backend\n      const movieData = response.data; // Se asume que la respuesta es un objeto con datos de la película\n\n      if (movieData) {\n        return {\n          title: movieData.title,\n          description: movieData.description,\n          image: movieData.image, // La URL de la imagen que ya está formateada desde el backend\n        };\n      } else {\n        setError(\"Película no encontrada\");\n        return null;\n      }\n    } catch (err) {\n      setError(\"Hubo un error al obtener los detalles de la película\");\n      console.error(err);\n      return null;\n    }\n  };\n\n  // Función para agregar una nueva película\n  const addmovie = async (movieTitle) => {\n    const movieDetails = await fetchMovieDetails(movieTitle);\n    if (movieDetails) {\n      setMovies((prevMovies) => [...prevMovies, movieDetails]); // Añadir la nueva película al estado\n      setError(null); // Limpiar cualquier mensaje de error\n      \n      // Ahora guardamos la película en la base de datos del backend\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/v1/movies\", {\n          name: movieDetails.title,\n          completed: false, // Establecer como no completada inicialmente\n        });\n        setMovies((prevMovies) => [...prevMovies, response.data.movie]); // Añadir la nueva película al estado\n      } catch (error) {\n        setError(\"Hubo un error al agregar la película\");\n        console.error(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"task-form\">\n      <h4>Movie Watch List by Mike</h4>\n      <Form addmovie={addmovie} />\n      {error && <p className=\"error-message\">{error}</p>} {/* Mostrar errores si existen */}\n      {movies.map((movie, index) => (\n        <Movies task={movie} key={index} /> // Mostrar todas las películas\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}